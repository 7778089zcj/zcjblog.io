<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>jq 节点操作</title>
    <url>/blog/2019/11/23/jq-%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="jq-节点操作"><a href="#jq-节点操作" class="headerlink" title="jq 节点操作"></a>jq 节点操作</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 获取节点</li>
<li>下表中的所有方法都具有筛选功能，就是都有参数</li>
<li>如 $(‘h2’).prev(‘div’) 意思为获取h2的前一个div节点<table class="table table-bordered table-striped table-condensed">
<tr><th>方法</th><th>作用</th></tr>
<tr><td>first()</td><td>获取集合中的第一个节点</td></tr>
<tr><td>last()</td><td>获取集合中的最后一个节点</td></tr>
<tr><td>prev()</td><td>获取前一个节点</td></tr>
<tr><td>next()</td><td>获取后一个节点</td></tr>
<tr><td>nextAll()</td><td>获取下面的所有兄弟节点</td></tr>
<tr><td>siblings()</td><td>获取所有兄弟节点，不包括本身</td></tr>
<tr><td>children()</td><td>获取直接子元素 只选择一层</td></tr>
<tr><td>find()</td><td>获取后代子元素 参数是必须的，如要选择所有可以用*选择器</td></tr>
<tr><td>parent()</td><td>获取父节点</td></tr>
<tr><td>parents()</td><td>获取祖先节点</td></tr>
<tr><td>closest()</td><td>获取当前最近的祖先元素，唯一最近的元素  参数是必须的</td></tr>
</table>

</li>
</ul>
<p><strong>例子如下</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="./</span>jquery<span class="number">-3.4</span><span class="number">.1</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li1&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li2&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li3&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li4&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li class="</span>active<span class="string">"&gt;li5</span></span><br><span class="line"><span class="string">            &lt;a&gt;我是直接子元素&lt;span&gt;haha&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;我是直接子元素&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li6&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li7&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li8&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li9&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li&gt;li10&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        //获取节点</span></span><br><span class="line"><span class="string">        //下面的所有方法都具有筛选功能</span></span><br><span class="line"><span class="string">        //获取集合中的第一个元素 first()</span></span><br><span class="line"><span class="string">        $('li').first().css('color', 'red');</span></span><br><span class="line"><span class="string">        //获取集合中的最后一个元素 last()</span></span><br><span class="line"><span class="string">        $('li').last().css('color', '#ccc');</span></span><br><span class="line"><span class="string">        //获取前一个节点 prev()</span></span><br><span class="line"><span class="string">        $('.active').prev().html('我是前一个');</span></span><br><span class="line"><span class="string">        //获取后一个节点 next()</span></span><br><span class="line"><span class="string">        $('.active').next().html('我是后一个')</span></span><br><span class="line"><span class="string">        //获取下面的所有兄弟节点 nextAll()</span></span><br><span class="line"><span class="string">        $('.active').nextAll().css('background', 'yellow');</span></span><br><span class="line"><span class="string">        //获取所有兄弟节点 siblings()</span></span><br><span class="line"><span class="string">        $('.active').siblings().css('font-size', '17px');</span></span><br><span class="line"><span class="string">        //获取直接子元素 children()</span></span><br><span class="line"><span class="string">        $('.active').children().css('border','1px solid black')</span></span><br><span class="line"><span class="string">        //获取后代子元素 find()</span></span><br><span class="line"><span class="string">        $('.active').find('*').css('border','1px solid red')</span></span><br><span class="line"><span class="string">        //父节点 parent()</span></span><br><span class="line"><span class="string">        $('.active').parent().css('border', '1px solid greenyellow')</span></span><br><span class="line"><span class="string">        //祖先节点 parents()</span></span><br><span class="line"><span class="string">        $('.active').parents().css('background', 'rgba(100,100,100,.2)');</span></span><br><span class="line"><span class="string">        //获取当前最近的祖先节点 closest()</span></span><br><span class="line"><span class="string">        $('.active').closest('ul').css('box-shadow', '1px 1px 5px red')</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><input checked="" disabled="" type="checkbox"> 添加节点<ul>
<li>append() 与appendTO的区别在于后续链式操作的时候对象不同 </li>
</ul>
</li>
<li>append prepend before after对页面的已经有的元素，做的都是剪切操作<pre><code>//解决办法 不用变量，用字符串就可以解决这个问题 如(&apos;&lt; span&gt;aaa&lt;/ span&gt;&apos;)
//或在定义变量的时候就直接用 let span=&apos; &lt; span&gt;ssss&lt;/ span&gt; &apos;  </code></pre><table class="table table-bordered table-striped table-condensed">
<tr><th>方法</th><th>作用</th></tr>
<tr><td>append()</td><td>将节点添加到指定节点的里面的最后面</td></tr>
<tr><td>appendTo()</td><td>将节点添加到指定节点的里面的最后面</td></tr>
<tr><td>prepend()</td><td>将节点添加到指定节点的里面的最前面</td></tr>
<tr><td>prependTo()</td><td>将节点添加到指定节点的里面的最前面</td></tr>
<tr><td>before()</td><td>将节点添加到指定节点的上面，形成上一个兄弟元素</td></tr>
<tr><td>insertBefore()</td><td>将节点添加到指定节点的上面，形成上一个兄弟元素</td></tr>
<tr><td>after()</td><td>将节点添加到指定节点的下面，形成下一个兄弟节点</td></tr>
<tr><td>insertAfter()</td><td>将节点添加到指定节点的下面，形成下一个兄弟节点</td></tr>
<tr><td>clone()</td><td>克隆节点，clone的参数是布尔值 false 默认 true 会克隆操作的行为</td></tr>
<tr><td>remove()</td><td>删除节点，不会保存操作的行为</td></tr>
<tr><td>detach()</td><td>detach() 对于删除的节点会保存操作的行为</td></tr>
</table>

</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="./</span>jquery<span class="number">-3.4</span><span class="number">.1</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div style="</span>border: <span class="number">1</span>px solid black;<span class="string">"&gt;1111&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        //添加节点 </span></span><br><span class="line"><span class="string">        //append() appendTo() 将节点添加到指定节点的里面的最后面</span></span><br><span class="line"><span class="string">        $span = $('&lt;span&gt;2222&lt;/span&gt;')</span></span><br><span class="line"><span class="string">        // $('div').append($span); ///11112222</span></span><br><span class="line"><span class="string">        // $span.appendTo($('div'));//11112222</span></span><br><span class="line"><span class="string">        //append() 与appendTO的区别在于后续链式操作的时候对象不同 append是div appendTo是span</span></span><br><span class="line"><span class="string">        //prepend prependTo() 将节点添加到指定节点的里面的最前面</span></span><br><span class="line"><span class="string">        // $('div').prepend($span); //22221111</span></span><br><span class="line"><span class="string">        // $span.prependTo($('div'));//22221111</span></span><br><span class="line"><span class="string">        //before()  insertBefore() 将节点添加到指定节点的上面，形成上一个兄弟节点</span></span><br><span class="line"><span class="string">        // $('div').before($span) //2222</span></span><br><span class="line"><span class="string">                                  //1111</span></span><br><span class="line"><span class="string">        // $span.insertBefore($('div')); //2222</span></span><br><span class="line"><span class="string">                                         //1111</span></span><br><span class="line"><span class="string">        //after() insertAfter() 将节点添加到指定节点的下面，形成下一个兄弟节点</span></span><br><span class="line"><span class="string">        // $('div').after($span);  //1111</span></span><br><span class="line"><span class="string">                                  //2222</span></span><br><span class="line"><span class="string">        // $span.insertAfter($('div')); //1111</span></span><br><span class="line"><span class="string">                                       //2222</span></span><br><span class="line"><span class="string">        //问题：为什么会出现上面的结果呢，那是因为append prepend before after对页面的已经有的元素，做的都是剪切操作</span></span><br><span class="line"><span class="string">        //解决办法 不用变量，用字符串就可以解决这个问题 如('&lt;span&gt;aaa&lt;/span&gt;')</span></span><br><span class="line"><span class="string">        //或在定义变量的时候就直接用 let span='&lt;span&gt;ssss&lt;/span&gt;'</span></span><br><span class="line"><span class="string">        //克隆节点 clone() 参数是布尔值 默认为false ，参数为true时，会克隆操作的行为</span></span><br><span class="line"><span class="string">        $('div').click(function () &#123;</span></span><br><span class="line"><span class="string">            alert(123)</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">        //false</span></span><br><span class="line"><span class="string">        // $('div').clone().insertAfter($('div'))</span></span><br><span class="line"><span class="string">        //true</span></span><br><span class="line"><span class="string">        // $('div').clone(true).insertBefore($('div'))</span></span><br><span class="line"><span class="string">        //删除节点 remove detach</span></span><br><span class="line"><span class="string">        //remove 与detach 都可以进行删除操作，区别是，detach 会保存操作  remove 不会</span></span><br><span class="line"><span class="string">        //remove()不会保存操作</span></span><br><span class="line"><span class="string">        // let $s = $('div').remove();</span></span><br><span class="line"><span class="string">        // $('body').append($s)</span></span><br><span class="line"><span class="string">        //detach会保存操作</span></span><br><span class="line"><span class="string">        // let $s = $('div').detach();</span></span><br><span class="line"><span class="string">        // $('body').append($s)</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jq</tag>
      </tags>
  </entry>
  <entry>
    <title>jq get(0) 问题</title>
    <url>/blog/2019/11/23/jq%20get(0)%20%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="jq-get-0-问题"><a href="#jq-get-0-问题" class="headerlink" title="jq get(0) 问题"></a>jq get(0) 问题</h2><ul>
<li><input checked="" disabled="" type="checkbox"> jq get(0)问题</li>
<li>注：这里所说的get不是ajax里的get。</li>
<li>get()： 将jq获取的元素转成js原生的元素</li>
<li>问题：为什么在用get的时候，哪怕只有一个元素，都需要写参数0？<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        div &#123;</span></span><br><span class="line"><span class="regexp">            width: 100px;</span></span><br><span class="line"><span class="regexp">            height: 100px;</span></span><br><span class="line"><span class="regexp">            background: black;</span></span><br><span class="line"><span class="regexp">            margin: 0 auto;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">    &lt;script src=<span class="string">"./jquery-3.4.1.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//jq中的get问题 这里所说的get不是ajax里的get</span></span><br><span class="line">        <span class="comment">//get() 将jq获取的元素转成js原生的元素</span></span><br><span class="line">        <span class="comment">//问题：为什么在用get的时候，需要写参数0 </span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).get(<span class="number">0</span>).offsetWidth) <span class="comment">//100</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).get().offsetWidth) <span class="comment">//undefined</span></span><br><span class="line">        <span class="comment">//我们可以将$('div').get() 输出一下看看</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).get()); <span class="comment">//div的数组</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20191120201937984.png" alt="在这里插入图片描述"></li>
</ul>
<blockquote>
<p>从上面的结果可以看出，get之后返回的是一个数组，哪怕他只有一个元素，所以我们在写get的时候需要加参数0.</p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jq</tag>
      </tags>
  </entry>
  <entry>
    <title>jq 获取元素的尺寸</title>
    <url>/blog/2019/11/23/jq%20%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E7%9A%84%E5%B0%BA%E5%AF%B8/</url>
    <content><![CDATA[<h2 id="jq-获取元素的尺寸"><a href="#jq-获取元素的尺寸" class="headerlink" title="jq 获取元素的尺寸"></a>jq 获取元素的尺寸</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 获取元素尺寸</li>
<li>jquery-3.4.1 是可以获取隐藏元素的宽高的，下面的方法都可以获取隐藏元素的宽高</li>
</ul>
<table class="table table-bordered table-striped table-condensed">
<tr><th>方法</th><th>作用</th></tr>
<tr><td>width()</td><td>获取元素的内容宽度</td></tr>
<tr><td>height()</td><td>获取元素的内容高度</td></tr>
<tr><td>innerWidth()</td><td>获取元素（内容+padding）宽度</td></tr>
<tr><td>innerHeight()</td><td>获取元素（内容+padding）高度</td></tr>
<tr><td>outerWidth()</td><td>获取元素（内容+padding+border）宽度</td></tr>
<tr><td>outerHeight()</td><td>获取元素（内容+padding+border）高度</td></tr>
<tr><td>outerWidth(true)</td><td>获取元素（内容+padding+border+margin）宽度</td></tr>
<tr><td>outerHeight(true)</td><td>获取元素（内容+padding+border+margin）高度</td></tr>
</table>

<ul>
<li><input checked="" disabled="" type="checkbox"> 其他常用尺寸</li>
</ul>
<table class="table table-bordered table-striped table-condensed">
<tr><th>写法</th><th>作用</th></tr>
<tr><td> $(window).width()</td><td>获取浏览器可视区宽度</td></tr>
<tr><td> $(window).height()</td><td>获取浏览器可视区高度</td></tr>
<tr><td> $(document).width()</td><td>获取页面宽度</td></tr>
<tr><td> $(document).height()</td><td>获取页面高度</td></tr>
<tr><td> $('body').width()</td><td>获取页面宽度，body默认有8px的margin</td></tr>
<tr><td> $('body').height()</td><td>获取页面高度，body默认有8px的margin</td></tr>
</table>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        div &#123;</span></span><br><span class="line"><span class="regexp">            width: 100px;</span></span><br><span class="line"><span class="regexp">            height: 100px;</span></span><br><span class="line"><span class="regexp">            background: Red;</span></span><br><span class="line"><span class="regexp">            padding: 10px;</span></span><br><span class="line"><span class="regexp">            border: 5px black solid;</span></span><br><span class="line"><span class="regexp">            margin: 3px;</span></span><br><span class="line"><span class="regexp">            display: none;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">    &lt;script src=<span class="string">"./jquery-3.4.1.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body style="height: 3000px;"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//得到元素的内容宽度、高度 width() height()</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width()); <span class="comment">//100 </span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).height()); <span class="comment">//100 </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到元素的内容+padding innerWidth() innerHeight()</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).innerWidth()); <span class="comment">//120</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).innerHeight()); <span class="comment">//120 </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到元素的内容+padding+border outerWidth() outerHeight()</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).outerWidth());  <span class="comment">//130</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).outerHeight()); <span class="comment">//130</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到元素的内容+padding+border+margin outerWidth(true) outerHeight(true)</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).outerWidth(<span class="literal">true</span>));  <span class="comment">//136</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).outerHeight(<span class="literal">true</span>)); <span class="comment">//136</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置元素宽高</span></span><br><span class="line">        $(<span class="string">'div'</span>).width(<span class="number">300</span>);</span><br><span class="line">        $(<span class="string">'div'</span>).height(<span class="number">300</span>);</span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width()) <span class="comment">//300</span></span><br><span class="line">        $(<span class="string">'div'</span>).innerWidth(<span class="number">300</span>);</span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width());<span class="comment">//280  内容=300-padding</span></span><br><span class="line">        $(<span class="string">'div'</span>).outerWidth(<span class="number">300</span>)</span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width());<span class="comment">//270 内容=300-padding-border</span></span><br><span class="line">        $(<span class="string">'div'</span>).outerWidth(<span class="number">300</span>, <span class="literal">true</span>)</span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width()); <span class="comment">//264 内容=300-padding-border-margin</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//原生js 是获取不到隐藏元素的宽高的</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).get(<span class="number">0</span>).offsetWidth) <span class="comment">//0 get将jq获取的元素转成js原生的元素 get参数不写的话，输出undefind</span></span><br><span class="line">        <span class="comment">//因为$('div')返回的对象是个数组，不管有没有值，返回的都是数组，所以需要加0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//jq是可以获取隐藏元素的宽高的</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).width())  <span class="comment">//264</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//其他尺寸</span></span><br><span class="line">        <span class="comment">//浏览器可视区的宽高 $(window).width() $(window).height</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="built_in">window</span>).width())</span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="built_in">window</span>).height())</span><br><span class="line"></span><br><span class="line">        <span class="comment">//页面宽高 $(document).width() $(document).height() $('body').width() $('body').height()</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="built_in">document</span>).width()); <span class="comment">//877</span></span><br><span class="line">        <span class="built_in">console</span>.log($(<span class="string">'body'</span>).width()); <span class="comment">//861 //左右两边默认 margin 8px</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jq</tag>
      </tags>
  </entry>
</search>
